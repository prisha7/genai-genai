🗂️ Project Planning — BlogMaster
📅 Overview
The BlogMaster project was developed in a series of planned phases to ensure smooth collaboration, timely completion, and equal team contribution. Our planning focused on breaking the project into manageable tasks while aligning with the final assignment structure.

🛠️ Development Phases
1️⃣ Ideation & Requirement Gathering
Discussed the core idea of an AI-powered blog generator

Identified user needs (content creators, students, marketers)

Chose technologies: Gemini API, React, Flask, Docker

2️⃣ Design & Planning
Designed basic UI layout and app flow

Finalized backend structure and frontend requirements

Set up folder structure and task responsibilities

3️⃣ Task Allocation
markdown
Copy
Edit
| Team Member | Responsibility |
|-------------|----------------|
| **Rahul**   | Backend development, Gemini API integration setup, and Flask API structure |
| **Riyan**   | Frontend development with React, API integration, and state management |
| **Suhani**  | UI styling, bug fixing, Docker deployment, and final project packaging |
| **Prisha**  | Content formatting, user testing, documentation cleanup, and design suggestions |
4️⃣ Implementation
Backend: Flask API with Gemini 1.5 Flash for blog generation

Frontend: React app with inputs for topic, word count, tone, etc.

Connected frontend to backend using API endpoints

Added extra features like jokes and dynamic feedback

5️⃣ Testing & Debugging
Tested API responses and UI rendering

Fixed errors in form validation and content generation

Ensured cross-browser compatibility and stable build

6️⃣ Final Packaging & Submission
Organized files under main folder 03/blogmaster

Cleaned unnecessary folders (e.g., node_modules, venv)

Added README.md, Dockerfile, and .gitignore

Final push to GitHub under team repo

🔧 Tools Used
Git & GitHub – Version control and collaboration

VS Code – Code editing

Google Gemini API – Blog generation

Flask + React – Backend and frontend

Docker – Deployment and packaging

Markdown – Documentation

✅ Outcome
The team successfully built a working full-stack blog generation app powered by Gemini AI. The project was completed on time, with each member contributing to core components — resulting in a collaborative, functional, and well-documented submission.
